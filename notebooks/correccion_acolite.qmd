---
title: "Corrección con ACOLITE"
format: html
date: last-modified
author:
  - name: Víctor Gauto
    orcid: 0000-0001-9960-8558
    corresponding: true
    email: victor.gauto@ca.frre.utn.edu.ar
    affiliations:
      - name: GISTAQ (UTN-FRRe)
        url: https://www.instagram.com/gistaq.utn/
      - name: IIDTHH (UNNE, CONICET)
        url: https://iidthh.conicet.gov.ar/
      - name: Instituto Gulich (UNC, CONAE)
        url: https://ig.conae.unc.edu.ar/
execute:
  eval: false
  echo: true
code-annotations: hover
---

El producto satelital proviene de la plataforma Sentinel-2, nivel de procesamiento L1C, sin corrección atmosférica, en reflectancia a tope de atmósfera.

La corrección atmosférica se realiza con el procesador [ACOLITE](https://github.com/acolite/acolite), desarrollado para aplicaciones acuáticas, mediante el algoritmo dark spectrum fitting [@Vanhellemont2018; @Vanhellemont2019; @Vanhellemont2019b].

ACOLITE se [descarga](https://github.com/acolite/acolite/releases) de manera libre y gratuita y está creado con lenguaje de programación Python.

La configuración de ACOLITE se almacena en formato de texto plano. La misma sirve para indicar los valores de las variables que se desean modificar. Se muestra a continuación las opciones utilizadas.

```{r filename="configuración.txt"}
l2w_export_geotiff=True
l2w_parameters=rhow_*
l2w_mask=True
l2w_mask_wave=1600
l2w_mask_threshold=0.0215
l2w_mask_water_parameters=False
l2w_mask_negative_rhow=True
l2w_mask_cirrus=True
l2w_mask_cirrus_threshold=0.005
dsf_residual_glint_correction=True
map_l2w=False
rgb_rhot=False
rgb_rhos=False
polygon=/ubicación/del/polígono.geojson
output=/ubicación/salida
```

La [instalación](https://github.com/acolite/acolite?tab=readme-ov-file#dependencies) de ACOLITE requiere la presencia de librerías específicas y la creación de un ambiente de ejecución.

Los productos de entrada al procesador pueden almacenarse como archivo de texto para su ejecución en serie. Para ello puede ejecutarse lo siguiente en la terminal de línea de comandos:

```{bash}
for file in entrada/*L1C*; do readlink -f "$file"; done | paste -sd "," > entrada_productos.txt
```

En donde los productos se almacenan en el directorio `entrada` y el archivo de salida es `entrada_productos.txt`.

Finalmente, se ejecuta ACOLITE con la configuración dada para todos los productos S2-L1C presentes:

```{bash}
python acolite/launch_acolite.py --cli --settings=configuración.txt  --inputfile=entrada_productos.txt
```

# Bibliografía

::: {#refs}
:::
